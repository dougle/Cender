{"name":"Cender","tagline":"A Gcode sender","body":"Cender\r\n======\r\n\r\nA Gcode sender for TinyG motion controller boards.\r\n--------------------------------------------------\r\n\r\nCender will let you:\r\n* Modify and backup your board configuration.\r\n* Jog your machine around and display current coordinates for XYZ and A.\r\n* Specify coordinates absolutely, relatively, as a percentage or arithmetically using the current position.\r\n* Home all axis or individual axis.\r\n* Enter manual Gcode or board specific commands.\r\n* Let you define offsets and change the current position based on those offsets.\r\n* Toggle coolant and spindle including direction and speed.\r\n* Upload and track file progress.\r\n* Monitor board command queue and current velocity.\r\n* Keep updated with your controller's firmware.\r\n* Currently only supports TinyG 0.96 and 0.97 but Cender is structured to accept drivers for all boards past and present.\r\n\r\n\r\nInstalling\r\n------------\r\nWritten and tested on python 2.6.\r\nCender requires pubsub and pyserial and uses pyqt for the interface.\r\n\r\nInstall dependancies:\r\n\r\n    # aptitude install python-qt4\r\n    # pip install pubsub pyserial\r\n\r\nDownload the [zip file](https://github.com/dougle/Cender/archive/master.zip) and run: (doesn't need root):\r\n\r\n    $ python main.py\r\n\r\n\r\nUsage\r\n-----\r\nAn introduction/demo video will be here soon.\r\n\r\n\r\nDrivers\r\n---------\r\nThe structure of cender is a main window object that instantiates a driver object based on the user's configuration and chosen board manufacturer and version.\r\n\r\nCurrently only TinyG versions 0.96 and 0.97 (master and edge) are supported, but new drivers can easily be written to support many many different controller boards.\r\n\r\nDrivers for each version normally extend a base class for the manufacturer which contains common code for that range of boards.  \r\nAll drivers extend a base controller class that contains the basic command sending and status receiving thread code.\r\n\r\nIf you have a spare controller board other than a tinyg and are willing to lend it (short term) to me to develop and test a driver please contact me, that would be hugely appreciated.\r\n\r\n\r\nKnown Issues\r\n------------\r\n* For arc gcode G02 and G03, these commands are split into many \"chords\" before they reach the command queue, they will throw the file progress bar off.\r\n* Grbl stub file is in place but contains no methods, if someone has a Grbl board and can flesh that driver out that would be much appreciated. Alternatively contacting me and lending me a spare grbl shield (i have an uno) would also be appreciated hugely.\r\n* Untested on anything other than linux (debian)\r\n\r\n\r\nContributing\r\n------------\r\nAll comments and bug reports are welcome, this code will be kept up-to-date, fixed and improved with new features as and when i stumble across them. Forks and pull requests are also welcome.\r\n\r\nCender has been written to conform to PEP008 and the pep8 utility should be run on all modified files before commiting.\r\n\r\n    # pip install pep8\r\n    $ find . -iname '*.py' -exec pep8 {} \\;\r\n","google":"UA-58303612-1","note":"Don't delete this file! It's used internally to help with page regeneration."}